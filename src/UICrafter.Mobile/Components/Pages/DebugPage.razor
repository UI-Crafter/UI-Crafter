@page "/test/debug"
@attribute [Authorize]
<PageTitle>User Claims</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="pa-4">
    <MudPaper Class="pa-2">
        <h1>User Claims</h1>

        @if (claims.Any())
        {
            <ul>
            @foreach (var claim in claims)
            {
                <li><b>@claim.Type:</b> @claim.Value</li>
            }
            </ul>
        }
    </MudPaper>
</MudContainer>


@code {
    private IEnumerable<Claim> claims = [];

    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthState == null)
        {
            return;
        }

        var authState = await AuthState;
        claims = authState.User.Claims;

        Log.Information("Log Test");
    }
}
