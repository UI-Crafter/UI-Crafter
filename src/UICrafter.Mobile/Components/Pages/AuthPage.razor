@page "/authpage"

@attribute [Authorize]

<PageTitle>User Claims</PageTitle>

<h1>User Claims</h1>

@if (claims.Any())
{
    <ul>
        @foreach (var claim in claims)
        {
            <li><b>@claim.Type:</b> @claim.Value</li>
        }
    </ul>
}
<MudPaper>
    @Response
</MudPaper>



@code {
    [Inject] private IHttpClientProvider HttpClientProvider { get; set; } = default!;
    private IEnumerable<Claim> claims = [];

    [CascadingParameter]
    private Task<AuthenticationState> AuthState { get; set; } = default!;

    private string Response { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState;
        if (authState is not null)
        {
            claims = authState.User.Claims;
        }

        var httpClient = await HttpClientProvider.GetAuthenticatedHttpClient();

        var response = await httpClient.GetAsync("api/prototest");
        Response = await response.Content.ReadAsStringAsync();
    }
}
