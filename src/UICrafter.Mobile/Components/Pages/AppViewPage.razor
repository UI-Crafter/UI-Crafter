@page "/appview/{viewId:long?}"
@attribute [Authorize]

<PageTitle>@appView.Name</PageTitle>


<div style=@(!viewId.HasValue ? null : "display: none;")>
    <LoadMetaDataMobile />
</div>
@if (!viewId.HasValue)
{
    return;
}


@if (_isLoading)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    @if (viewId.HasValue && componentList != null && componentList.UIComponents.Any())
    {
        <CascadingValue Value="stupidStore">
            @foreach (var component in componentList.UIComponents)
            {
                @switch (component.ComponentCase)
                {
                    case UIComponent.ComponentOneofCase.Button:
                        <MobileAPIButton Button="component" />
                        break;
                    case UIComponent.ComponentOneofCase.InputField:
                        <MobileInputField InputField="component" />
                        break;
                    case UIComponent.ComponentOneofCase.Textbox:
                        <MobileTextBox Textbox="component" />
                        break;
                    default:
                        break;
                }
            }
        </CascadingValue>
    }
    else
    {
        <MudText Typo="Typo.body1">
            No components to display.
        </MudText>
    }
}

@code {
    [Parameter]
    public long? viewId { get; set; }
    private AppView? appView;

    private UIComponentList componentList = new UIComponentList();
    private JsonPublisher stupidStore = new JsonPublisher();

    private long? _oldId;
    private bool _isLoading = false;

    protected override async Task OnParametersSetAsync()
    {
        if (!viewId.HasValue)
        {
            return;
        }

        _isLoading = true;
        if (_oldId != viewId)
        {
            stupidStore = new();
            componentList = new();
            _oldId = viewId;
        }

        appView = await AppViewRepository.GetAppViewById(viewId.Value);

        if (appView != null && appView.Content != null)
        {
            componentList = UIComponentList.Parser.ParseFrom(appView.Content);
        }
        else
        {
            componentList = new UIComponentList();
        }
        _isLoading = false;
    }
}

