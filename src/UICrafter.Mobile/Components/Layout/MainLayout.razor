@using UICrafter.Core.Models
@inherits LayoutComponentBase

<MudThemeProvider IsDarkMode="IsDarkMode" Theme="ThemeUtility.CreateTheme()" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<div class="page">
    <main class="main">
        @Body
    </main>
    <div>
        <NativeNavbar Class="native-navbar-fixed" />
        <NativeNavbar Style="visibility: hidden;" />
    </div>
</div>

<script>
    const ptr = PullToRefresh.init({
        mainElement: 'main',
        onRefresh() {
            window.location.reload();
        }
    });
</script>

@code {
    [Inject] private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;
    [Inject] private ThemeService ThemeService { get; set; } = default!;

    private bool IsDarkMode => ThemeService.ThemeMode switch
    {
        ThemeMode.DarkMode => true,
        ThemeMode.LightMode => false,
        ThemeMode.Automatic => Application.Current?.RequestedTheme == AppTheme.Dark,
        _ => false
    };

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ThemeService.PropertyChanged += async (sender, args) =>
        {
            if (args.PropertyName == nameof(ThemeService.ThemeMode))
            {
                await InvokeAsync(StateHasChanged);
            }
        };
    }
}
