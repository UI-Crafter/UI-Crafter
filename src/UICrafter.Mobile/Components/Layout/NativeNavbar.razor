@using MudBlazor.Utilities
@inject NavigationManager NavigationManager

<MudPaper Class=@ClassName Style=@Style Outlined>
    <MudStack Row Justify="Justify.SpaceAround">
        <NavIconButton Icon="@Icons.Material.Outlined.Home" ActiveIcon="@Icons.Material.Filled.Home" Href="/" Title="Home" IsActiveFunc=@IsActive />
        <NavIconButton Icon="@Icons.Material.Outlined.Apps" ActiveIcon="@Icons.Material.Filled.Apps" Href="appview" Title="App-Views" IsActiveFunc=@IsActive />
        <NavIconButton Icon="@Icons.Material.Outlined.AccountCircle" ActiveIcon="@Icons.Material.Filled.AccountCircle" Href="authpage" Title="Account" IsActiveFunc=@IsActive />
    </MudStack>
</MudPaper>

@code {
    [Parameter] public string? Class { get; set; }
    [Parameter] public string? Style { get; set; }

    private string ClassName => new CssBuilder("px-3 py-1")
    .AddClass(Class)
    .Build();

    private string currentPath = string.Empty;

    protected override void OnInitialized()
    {
        currentPath = new Uri(NavigationManager.Uri).LocalPath;
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentPath = new Uri(e.Location).LocalPath;
        InvokeAsync(StateHasChanged);
    }

    private bool IsActive(string link) => currentPath[1..].Equals(link.Split('/')[0], StringComparison.InvariantCultureIgnoreCase);

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
