@using System.Collections.Specialized
@implements IDisposable

@foreach (var component in UIComponents)
{
    switch (component.ComponentCase)
    {
        case UIComponent.ComponentOneofCase.Button:
            <RenderAPIButton @key=component Button="component" />
            break;
        case UIComponent.ComponentOneofCase.InputField:
            <RenderInputField @key=component InputField="component" />
            break;
        case UIComponent.ComponentOneofCase.Textbox:
            <RenderTextBox @key=component Textbox="component" />
            break;
        default:
            break;
    }
}

@code {
    [Parameter]
    public required ObservableCollection<UIComponent> UIComponents { get; set; }

    protected override void OnInitialized()
    {
        UIComponents.CollectionChanged += ReRender;
    }

    private void ReRender(object? sender, NotifyCollectionChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        UIComponents.CollectionChanged -= ReRender;
    }
}
