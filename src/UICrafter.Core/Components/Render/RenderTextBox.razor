@inherits BaseTextBox
@implements IDisposable

@{
    base.BuildRenderTree(__builder);
}

@code {
    [Parameter]
    public required UIComponent Textbox { get; set; }

    [CascadingParameter]
    public required JsonPublisher JSONPublisher { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Label = Textbox.Textbox.Label;
        Content = Textbox.Textbox.Content;
        Lines = Textbox.Textbox.NumberOfLines;


        if (!string.IsNullOrEmpty(Textbox.Textbox.SourceRef))
        {
            JSONPublisher.Subscribe(Textbox.Textbox.SourceRef, UpdateTextboxContent);
        }
    }

    public void Dispose()
    {
        JSONPublisher?.Unsubscribe(Textbox.Textbox.SourceRef, UpdateTextboxContent);
    }

    private void UpdateTextboxContent(Dictionary<string, object> jsonResponse)
    {
        if (string.IsNullOrEmpty(Textbox.Textbox.JsonField))
        {
            Content = "No JsonField specified.";
        }
        else
        {
            string[] fieldPath = Textbox.Textbox.JsonField.Split('.');
            if (JsonToString.TryGetNestedFieldValue(jsonResponse, fieldPath, out var fieldValue))
            {
                string description = JsonToString.ObjectAsString(fieldValue);
                Content = JsonToString.CleanUpString(description);
            }
            else
            {
                Content = $"Field '{Textbox.Textbox.JsonField}' not found in JSON response.";
            }
        }

        InvokeAsync(StateHasChanged);
    }
}
