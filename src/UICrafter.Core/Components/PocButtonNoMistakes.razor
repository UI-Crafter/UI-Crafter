@using MudBlazor
@using UICrafter.Core.Models
@using System.Diagnostics
@using Microsoft.AspNetCore.Components
@using System.Net.Http
@using System.Net.Http.Json
@using UICrafter.Core.Utility

@inject HttpClient Http


<MudButton OnClick="CallApi"
           Color="@ColorOptions.GetColor(Model)"
           Disabled=@isDisabled>
    @Model.Name
</MudButton>

@if (!string.IsNullOrEmpty(Model.JSONResponse))
{
    <MudPaper Elevation="3" Class="pa-4">
        <MudText Typo="Typo.h4" GutterBottom="true">API Response:</MudText>
        @Model.JSONResponse
    </MudPaper>
}


@code {
    private bool isDisabled = false;

    [Parameter]
    public PocButtonModel? Model { get; set; }

    [CascadingParameter]
    public StupidStore? StupidStore { get; set; }

    private async Task CallApi()
    {
        try
        {
            isDisabled = true;
            var tmp = Model.Name;
            Model.Name = "Loading...";

                var response = await Http.GetStringAsync(Model.URL);
                
                if (response == null)
                {
                    Debug.WriteLine($"Error calling API for button {Model.Name}: Response is null");
                   
                    Model.Color = "error";

                    return;
                }
                await Task.Delay(2000);
                Model.Name = tmp;
                Model.Color = "success";
                isDisabled = false;
              
                StupidStore.NotifySubscribers(Model.Id.ToString(), response);
            }
            catch (Exception ex)
            {
                Debug.WriteLine($"Error calling API for button {Model.Name}: {ex.Message}");
            }
        }
}
